{"version":3,"sources":["webpack:///./src/views/EditBook.vue?8aa7","webpack:///src/views/EditBook.vue","webpack:///./src/views/EditBook.vue?48b7","webpack:///./src/views/EditBook.vue","webpack:///../../../src/components/VForm/VForm.ts","webpack:///../../../src/components/VTextarea/VTextarea.ts","webpack:///../../../src/components/VAutocomplete/VAutocomplete.ts"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","_v","ref","nameRules","model","value","book","callback","$$v","$set","expression","v","authors","customFilter","on","$event","preventDefault","save","staticRenderFns","name","data","methods","computed","getBook","$store","getters","$route","params","id","mounted","fetchBooks","fetchAuthors","allAuthors","component","VAutocomplete","VBtn","VDivider","VForm","VTextField","VTextarea","provide","form","inheritAttrs","props","disabled","lazyValidation","readonly","Boolean","inputs","watchers","errorBag","watch","handler","errors","Object","deep","immediate","watchInput","watcher","input","val","_uid","valid","shouldValidate","validate","filter","reset","resetErrorBag","setTimeout","resetValidation","register","unregister","found","find","i","unwatch","h","novalidate","attrs$","submit","e","$slots","baseMixins","autoGrow","noResize","rowHeight","type","Number","default","validator","isNaN","parseFloat","rows","parseInt","classes","noResizeHandle","lazyValue","$nextTick","calculateInputHeight","$refs","height","minHeight","Math","genInput","onInput","onKeyDown","isFocused","defaultMenuProps","offsetY","offsetOverflow","transition","allowOverflow","autoSelectFirst","itemText","queryText","hideNoData","menuProps","noFilter","searchInput","undefined","lazySearch","selectedIndex","computedItems","selectedValues","selectedItems","map","item","hasDisplayedItems","hideSelected","filteredItems","some","length","currentRange","selectedItem","String","getText","internalSearch","allItems","text","get","set","isAnyValueAllowed","isDirty","searchIsDirty","isSearching","multiple","menuCanShow","$_menuProps","listData","items","internalValue","document","isMenuActive","oldVal","activateMenu","created","onFilteredItemsChanged","onInternalSearchChanged","updateMenuDimensions","menu","changeSelectedIndex","keyCode","deleteCurrentItem","curIndex","curItem","getDisabled","lastIndex","nextIndex","nextItem","clearableCallback","autocomplete","domProps","genInputSlot","slot","genSelections","hasSlot","onClick","isAppendInner","target","onSpaceDown","onTabDown","onUpDown","selectItem","setSelectedItems","setSearch","updateSelf","valueComparator","getValue","hasItem","indexOf","onCopy","currentItem","currentItemText","event"],"mappings":"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","file":"js/chunk-4bcc64c8.87e73015.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"about\",attrs:{\"data-app\":\"\"}},[_c('h1',[_vm._v(\"Edit Book\")]),_c('v-form',{ref:\"form\"},[_c('v-text-field',{attrs:{\"counter\":20,\"rules\":_vm.nameRules,\"label\":\"Title\",\"required\":\"\"},model:{value:(_vm.book.title),callback:function ($$v) {_vm.$set(_vm.book, \"title\", $$v)},expression:\"book.title\"}}),_c('v-text-field',{attrs:{\"rules\":[function (v) { return !!v || 'ISBN is required'; }],\"label\":\"ISBN\",\"required\":\"\"},model:{value:(_vm.book.ISBN),callback:function ($$v) {_vm.$set(_vm.book, \"ISBN\", $$v)},expression:\"book.ISBN\"}}),_c('v-autocomplete',{attrs:{\"items\":_vm.authors,\"filter\":_vm.customFilter,\"item-text\":\"name\",\"label\":\"Author\"},model:{value:(_vm.book.author),callback:function ($$v) {_vm.$set(_vm.book, \"author\", $$v)},expression:\"book.author\"}}),_c('v-divider'),_c('v-textarea',{attrs:{\"solo\":\"\",\"name\":\"input-7-4\",\"label\":\"Description\"},model:{value:(_vm.book.description),callback:function ($$v) {_vm.$set(_vm.book, \"description\", $$v)},expression:\"book.description\"}}),_c('v-btn',{on:{\"click\":function($event){$event.preventDefault();return _vm.save($event)}}},[_vm._v(\" Save \")])],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"about\" data-app>\n    <h1>Edit Book</h1>\n    <v-form\n      ref=\"form\"\n    >\n      <v-text-field\n        v-model=\"book.title\"\n        :counter=\"20\"\n        :rules=\"nameRules\"\n        label=\"Title\"\n        required\n      ></v-text-field>\n\n      <v-text-field\n        v-model=\"book.ISBN\"\n        :rules=\"[v => !!v || 'ISBN is required']\"\n        label=\"ISBN\"\n        required\n      ></v-text-field>\n      <v-autocomplete\n        v-model=\"book.author\"\n        :items=\"authors\"\n        :filter=\"customFilter\"\n        item-text=\"name\"\n        label=\"Author\"\n      ></v-autocomplete>\n      <v-divider></v-divider>\n        <v-textarea\n          solo\n          name=\"input-7-4\"\n          label=\"Description\"\n          v-model=\"book.description\"\n        ></v-textarea>\n          <v-btn\n            @click.prevent=\"save\"\n            >\n            Save\n          </v-btn>\n    </v-form>\n  </div>\n</template>\n\n<script>\nimport {mapActions, mapGetters} from 'vuex'\nexport default {\n  name: \"EditBook\",\n  data(){\n    return{\n      nameRules: [\n        v => !!v || 'Name is required',\n        v => (v && v.length <= 20) || 'Name must be less than 20 characters',\n      ],\n      book: {},\n      authors: []\n    }\n  },\n  methods:{\n    ...mapActions(['fetchBooks', 'fetchAuthors', 'editBook']),\n     customFilter (item, queryText) {\n            const textOne = item.name.toLowerCase()\n            const searchText = queryText.toLowerCase()\n\n            return textOne.indexOf(searchText) > -1\n        },\n      save(){\n        this.editBook(this.book)\n      }\n  },\n  computed: {\n    ...mapGetters(['allAuthors']),\n    getBook(){\n      return this.$store.getters['getBookById'](this.$route.params.id)\n    }\n  },\n  mounted(){\n    this.fetchBooks()\n    this.fetchAuthors()\n    this.book = this.getBook\n    this.authors = this.allAuthors\n  }\n}\n</script>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./EditBook.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./EditBook.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./EditBook.vue?vue&type=template&id=2d8d2fda&\"\nimport script from \"./EditBook.vue?vue&type=script&lang=js&\"\nexport * from \"./EditBook.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VAutocomplete } from 'vuetify/lib/components/VAutocomplete';\nimport { VBtn } from 'vuetify/lib/components/VBtn';\nimport { VDivider } from 'vuetify/lib/components/VDivider';\nimport { VForm } from 'vuetify/lib/components/VForm';\nimport { VTextField } from 'vuetify/lib/components/VTextField';\nimport { VTextarea } from 'vuetify/lib/components/VTextarea';\ninstallComponents(component, {VAutocomplete,VBtn,VDivider,VForm,VTextField,VTextarea})\n","// Components\nimport VInput from '../VInput/VInput'\n\n// Mixins\nimport mixins from '../../util/mixins'\nimport BindsAttrs from '../../mixins/binds-attrs'\nimport { provide as RegistrableProvide } from '../../mixins/registrable'\n\n// Helpers\nimport { VNode } from 'vue'\n\ntype ErrorBag = Record<number, boolean>\ntype VInputInstance = InstanceType<typeof VInput>\ntype Watchers = {\n  _uid: number\n  valid: () => void\n  shouldValidate: () => void\n}\n\n/* @vue/component */\nexport default mixins(\n  BindsAttrs,\n  RegistrableProvide('form')\n  /* @vue/component */\n).extend({\n  name: 'v-form',\n\n  provide (): object {\n    return { form: this }\n  },\n\n  inheritAttrs: false,\n\n  props: {\n    disabled: Boolean,\n    lazyValidation: Boolean,\n    readonly: Boolean,\n    value: Boolean,\n  },\n\n  data: () => ({\n    inputs: [] as VInputInstance[],\n    watchers: [] as Watchers[],\n    errorBag: {} as ErrorBag,\n  }),\n\n  watch: {\n    errorBag: {\n      handler (val) {\n        const errors = Object.values(val).includes(true)\n\n        this.$emit('input', !errors)\n      },\n      deep: true,\n      immediate: true,\n    },\n  },\n\n  methods: {\n    watchInput (input: any): Watchers {\n      const watcher = (input: any): (() => void) => {\n        return input.$watch('hasError', (val: boolean) => {\n          this.$set(this.errorBag, input._uid, val)\n        }, { immediate: true })\n      }\n\n      const watchers: Watchers = {\n        _uid: input._uid,\n        valid: () => {},\n        shouldValidate: () => {},\n      }\n\n      if (this.lazyValidation) {\n        // Only start watching inputs if we need to\n        watchers.shouldValidate = input.$watch('shouldValidate', (val: boolean) => {\n          if (!val) return\n\n          // Only watch if we're not already doing it\n          if (this.errorBag.hasOwnProperty(input._uid)) return\n\n          watchers.valid = watcher(input)\n        })\n      } else {\n        watchers.valid = watcher(input)\n      }\n\n      return watchers\n    },\n    /** @public */\n    validate (): boolean {\n      return this.inputs.filter(input => !input.validate(true)).length === 0\n    },\n    /** @public */\n    reset (): void {\n      this.inputs.forEach(input => input.reset())\n      this.resetErrorBag()\n    },\n    resetErrorBag () {\n      if (this.lazyValidation) {\n        // Account for timeout in validatable\n        setTimeout(() => {\n          this.errorBag = {}\n        }, 0)\n      }\n    },\n    /** @public */\n    resetValidation () {\n      this.inputs.forEach(input => input.resetValidation())\n      this.resetErrorBag()\n    },\n    register (input: VInputInstance) {\n      this.inputs.push(input)\n      this.watchers.push(this.watchInput(input))\n    },\n    unregister (input: VInputInstance) {\n      const found = this.inputs.find(i => i._uid === input._uid)\n\n      if (!found) return\n\n      const unwatch = this.watchers.find(i => i._uid === found._uid)\n      if (unwatch) {\n        unwatch.valid()\n        unwatch.shouldValidate()\n      }\n\n      this.watchers = this.watchers.filter(i => i._uid !== found._uid)\n      this.inputs = this.inputs.filter(i => i._uid !== found._uid)\n      this.$delete(this.errorBag, found._uid)\n    },\n  },\n\n  render (h): VNode {\n    return h('form', {\n      staticClass: 'v-form',\n      attrs: {\n        novalidate: true,\n        ...this.attrs$,\n      },\n      on: {\n        submit: (e: Event) => this.$emit('submit', e),\n      },\n    }, this.$slots.default)\n  },\n})\n","// Styles\nimport './VTextarea.sass'\n\n// Extensions\nimport VTextField from '../VTextField/VTextField'\n\n// Utilities\nimport mixins from '../../util/mixins'\n\n// Types\nimport Vue from 'vue'\n\ninterface options extends Vue {\n  $refs: {\n    input: HTMLTextAreaElement\n  }\n}\n\nconst baseMixins = mixins<options &\n  InstanceType<typeof VTextField>\n>(\n  VTextField\n)\n\n/* @vue/component */\nexport default baseMixins.extend({\n  name: 'v-textarea',\n\n  props: {\n    autoGrow: Boolean,\n    noResize: Boolean,\n    rowHeight: {\n      type: [Number, String],\n      default: 24,\n      validator: (v: any) => !isNaN(parseFloat(v)),\n    },\n    rows: {\n      type: [Number, String],\n      default: 5,\n      validator: (v: any) => !isNaN(parseInt(v, 10)),\n    },\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        'v-textarea': true,\n        'v-textarea--auto-grow': this.autoGrow,\n        'v-textarea--no-resize': this.noResizeHandle,\n        ...VTextField.options.computed.classes.call(this),\n      }\n    },\n    noResizeHandle (): boolean {\n      return this.noResize || this.autoGrow\n    },\n  },\n\n  watch: {\n    lazyValue () {\n      this.autoGrow && this.$nextTick(this.calculateInputHeight)\n    },\n    rowHeight () {\n      this.autoGrow && this.$nextTick(this.calculateInputHeight)\n    },\n  },\n\n  mounted () {\n    setTimeout(() => {\n      this.autoGrow && this.calculateInputHeight()\n    }, 0)\n  },\n\n  methods: {\n    calculateInputHeight () {\n      const input = this.$refs.input\n      if (!input) return\n\n      input.style.height = '0'\n      const height = input.scrollHeight\n      const minHeight = parseInt(this.rows, 10) * parseFloat(this.rowHeight)\n      // This has to be done ASAP, waiting for Vue\n      // to update the DOM causes ugly layout jumping\n      input.style.height = Math.max(minHeight, height) + 'px'\n    },\n    genInput () {\n      const input = VTextField.options.methods.genInput.call(this)\n\n      input.tag = 'textarea'\n      delete input.data!.attrs!.type\n      input.data!.attrs!.rows = this.rows\n\n      return input\n    },\n    onInput (e: Event) {\n      VTextField.options.methods.onInput.call(this, e)\n      this.autoGrow && this.calculateInputHeight()\n    },\n    onKeyDown (e: KeyboardEvent) {\n      // Prevents closing of a\n      // dialog when pressing\n      // enter\n      if (this.isFocused && e.keyCode === 13) {\n        e.stopPropagation()\n      }\n\n      this.$emit('keydown', e)\n    },\n  },\n})\n","// Styles\nimport './VAutocomplete.sass'\n\n// Extensions\nimport VSelect, { defaultMenuProps as VSelectMenuProps } from '../VSelect/VSelect'\nimport VTextField from '../VTextField/VTextField'\n\n// Utilities\nimport mergeData from '../../util/mergeData'\nimport {\n  getObjectValueByPath,\n  getPropertyFromItem,\n  keyCodes,\n} from '../../util/helpers'\n\n// Types\nimport { PropType } from 'vue'\n\nconst defaultMenuProps = {\n  ...VSelectMenuProps,\n  offsetY: true,\n  offsetOverflow: true,\n  transition: false,\n}\n\n/* @vue/component */\nexport default VSelect.extend({\n  name: 'v-autocomplete',\n\n  props: {\n    allowOverflow: {\n      type: Boolean,\n      default: true,\n    },\n    autoSelectFirst: {\n      type: Boolean,\n      default: false,\n    },\n    filter: {\n      type: Function,\n      default: (item: any, queryText: string, itemText: string) => {\n        return itemText.toLocaleLowerCase().indexOf(queryText.toLocaleLowerCase()) > -1\n      },\n    },\n    hideNoData: Boolean,\n    menuProps: {\n      type: VSelect.options.props.menuProps.type,\n      default: () => defaultMenuProps,\n    },\n    noFilter: Boolean,\n    searchInput: {\n      type: String as PropType<string | undefined>,\n      default: undefined,\n    },\n  },\n\n  data () {\n    return {\n      lazySearch: this.searchInput,\n    }\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        ...VSelect.options.computed.classes.call(this),\n        'v-autocomplete': true,\n        'v-autocomplete--is-selecting-index': this.selectedIndex > -1,\n      }\n    },\n    computedItems (): object[] {\n      return this.filteredItems\n    },\n    selectedValues (): object[] {\n      return this.selectedItems.map(item => this.getValue(item))\n    },\n    hasDisplayedItems (): boolean {\n      return this.hideSelected\n        ? this.filteredItems.some(item => !this.hasItem(item))\n        : this.filteredItems.length > 0\n    },\n    currentRange (): number {\n      if (this.selectedItem == null) return 0\n\n      return String(this.getText(this.selectedItem)).length\n    },\n    filteredItems (): object[] {\n      if (!this.isSearching || this.noFilter || this.internalSearch == null) return this.allItems\n\n      return this.allItems.filter(item => {\n        const value = getPropertyFromItem(item, this.itemText)\n        const text = value != null ? String(value) : ''\n\n        return this.filter(item, String(this.internalSearch), text)\n      })\n    },\n    internalSearch: {\n      get (): string | undefined {\n        return this.lazySearch\n      },\n      set (val: any) {\n        this.lazySearch = val\n\n        this.$emit('update:search-input', val)\n      },\n    },\n    isAnyValueAllowed (): boolean {\n      return false\n    },\n    isDirty (): boolean {\n      return this.searchIsDirty || this.selectedItems.length > 0\n    },\n    isSearching (): boolean {\n      return (\n        this.multiple &&\n        this.searchIsDirty\n      ) || (\n        this.searchIsDirty &&\n        this.internalSearch !== this.getText(this.selectedItem)\n      )\n    },\n    menuCanShow (): boolean {\n      if (!this.isFocused) return false\n\n      return this.hasDisplayedItems || !this.hideNoData\n    },\n    $_menuProps (): object {\n      const props = VSelect.options.computed.$_menuProps.call(this);\n      (props as any).contentClass = `v-autocomplete__content ${(props as any).contentClass || ''}`.trim()\n      return {\n        ...defaultMenuProps,\n        ...props,\n      }\n    },\n    searchIsDirty (): boolean {\n      return this.internalSearch != null &&\n        this.internalSearch !== ''\n    },\n    selectedItem (): any {\n      if (this.multiple) return null\n\n      return this.selectedItems.find(i => {\n        return this.valueComparator(this.getValue(i), this.getValue(this.internalValue))\n      })\n    },\n    listData () {\n      const data = VSelect.options.computed.listData.call(this) as any\n\n      data.props = {\n        ...data.props,\n        items: this.virtualizedItems,\n        noFilter: (\n          this.noFilter ||\n          !this.isSearching ||\n          !this.filteredItems.length\n        ),\n        searchInput: this.internalSearch,\n      }\n\n      return data\n    },\n  },\n\n  watch: {\n    filteredItems: 'onFilteredItemsChanged',\n    internalValue: 'setSearch',\n    isFocused (val) {\n      if (val) {\n        document.addEventListener('copy', this.onCopy)\n        this.$refs.input && this.$refs.input.select()\n      } else {\n        document.removeEventListener('copy', this.onCopy)\n        this.updateSelf()\n      }\n    },\n    isMenuActive (val) {\n      if (val || !this.hasSlot) return\n\n      this.lazySearch = undefined\n    },\n    items (val, oldVal) {\n      // If we are focused, the menu\n      // is not active, hide no data is enabled,\n      // and items change\n      // User is probably async loading\n      // items, try to activate the menu\n      if (\n        !(oldVal && oldVal.length) &&\n        this.hideNoData &&\n        this.isFocused &&\n        !this.isMenuActive &&\n        val.length\n      ) this.activateMenu()\n    },\n    searchInput (val: string) {\n      this.lazySearch = val\n    },\n    internalSearch: 'onInternalSearchChanged',\n    itemText: 'updateSelf',\n  },\n\n  created () {\n    this.setSearch()\n  },\n\n  methods: {\n    onFilteredItemsChanged (val: never[], oldVal: never[]) {\n      // TODO: How is the watcher triggered\n      // for duplicate items? no idea\n      if (val === oldVal) return\n\n      this.setMenuIndex(-1)\n\n      this.$nextTick(() => {\n        if (\n          !this.internalSearch ||\n          (val.length !== 1 &&\n            !this.autoSelectFirst)\n        ) return\n\n        this.$refs.menu.getTiles()\n        this.setMenuIndex(0)\n      })\n    },\n    onInternalSearchChanged () {\n      this.updateMenuDimensions()\n    },\n    updateMenuDimensions () {\n      // Type from menuable is not making it through\n      this.isMenuActive && this.$refs.menu && this.$refs.menu.updateDimensions()\n    },\n    changeSelectedIndex (keyCode: number) {\n      // Do not allow changing of selectedIndex\n      // when search is dirty\n      if (this.searchIsDirty) return\n\n      if (this.multiple && keyCode === keyCodes.left) {\n        if (this.selectedIndex === -1) {\n          this.selectedIndex = this.selectedItems.length - 1\n        } else {\n          this.selectedIndex--\n        }\n      } else if (this.multiple && keyCode === keyCodes.right) {\n        if (this.selectedIndex >= this.selectedItems.length - 1) {\n          this.selectedIndex = -1\n        } else {\n          this.selectedIndex++\n        }\n      } else if (keyCode === keyCodes.backspace || keyCode === keyCodes.delete) {\n        this.deleteCurrentItem()\n      }\n    },\n    deleteCurrentItem () {\n      const curIndex = this.selectedIndex\n      const curItem = this.selectedItems[curIndex]\n\n      // Do nothing if input or item is disabled\n      if (\n        !this.isInteractive ||\n        this.getDisabled(curItem)\n      ) return\n\n      const lastIndex = this.selectedItems.length - 1\n\n      // Select the last item if\n      // there is no selection\n      if (\n        this.selectedIndex === -1 &&\n        lastIndex !== 0\n      ) {\n        this.selectedIndex = lastIndex\n\n        return\n      }\n\n      const length = this.selectedItems.length\n      const nextIndex = curIndex !== length - 1\n        ? curIndex\n        : curIndex - 1\n      const nextItem = this.selectedItems[nextIndex]\n\n      if (!nextItem) {\n        this.setValue(this.multiple ? [] : undefined)\n      } else {\n        this.selectItem(curItem)\n      }\n\n      this.selectedIndex = nextIndex\n    },\n    clearableCallback () {\n      this.internalSearch = undefined\n\n      VSelect.options.methods.clearableCallback.call(this)\n    },\n    genInput () {\n      const input = VTextField.options.methods.genInput.call(this)\n\n      input.data = mergeData(input.data!, {\n        attrs: {\n          'aria-activedescendant': getObjectValueByPath(this.$refs.menu, 'activeTile.id'),\n          autocomplete: getObjectValueByPath(input.data!, 'attrs.autocomplete', 'off'),\n        },\n        domProps: { value: this.internalSearch },\n      })\n\n      return input\n    },\n    genInputSlot () {\n      const slot = VSelect.options.methods.genInputSlot.call(this)\n\n      slot.data!.attrs!.role = 'combobox'\n\n      return slot\n    },\n    genSelections () {\n      return this.hasSlot || this.multiple\n        ? VSelect.options.methods.genSelections.call(this)\n        : []\n    },\n    onClick (e: MouseEvent) {\n      if (!this.isInteractive) return\n\n      this.selectedIndex > -1\n        ? (this.selectedIndex = -1)\n        : this.onFocus()\n\n      if (!this.isAppendInner(e.target)) this.activateMenu()\n    },\n    onInput (e: Event) {\n      if (\n        this.selectedIndex > -1 ||\n        !e.target\n      ) return\n\n      const target = e.target as HTMLInputElement\n      const value = target.value\n\n      // If typing and menu is not currently active\n      if (target.value) this.activateMenu()\n\n      this.internalSearch = value\n      this.badInput = target.validity && target.validity.badInput\n    },\n    onKeyDown (e: KeyboardEvent) {\n      const keyCode = e.keyCode\n\n      VSelect.options.methods.onKeyDown.call(this, e)\n\n      // The ordering is important here\n      // allows new value to be updated\n      // and then moves the index to the\n      // proper location\n      this.changeSelectedIndex(keyCode)\n    },\n    onSpaceDown (e: KeyboardEvent) { /* noop */ },\n    onTabDown (e: KeyboardEvent) {\n      VSelect.options.methods.onTabDown.call(this, e)\n      this.updateSelf()\n    },\n    onUpDown (e: Event) {\n      // Prevent screen from scrolling\n      e.preventDefault()\n\n      // For autocomplete / combobox, cycling\n      // interfers with native up/down behavior\n      // instead activate the menu\n      this.activateMenu()\n    },\n    selectItem (item: object) {\n      VSelect.options.methods.selectItem.call(this, item)\n      this.setSearch()\n    },\n    setSelectedItems () {\n      VSelect.options.methods.setSelectedItems.call(this)\n\n      // #4273 Don't replace if searching\n      // #4403 Don't replace if focused\n      if (!this.isFocused) this.setSearch()\n    },\n    setSearch () {\n      // Wait for nextTick so selectedItem\n      // has had time to update\n      this.$nextTick(() => {\n        if (\n          !this.multiple ||\n          !this.internalSearch ||\n          !this.isMenuActive\n        ) {\n          this.internalSearch = (\n            !this.selectedItems.length ||\n            this.multiple ||\n            this.hasSlot\n          )\n            ? null\n            : this.getText(this.selectedItem)\n        }\n      })\n    },\n    updateSelf () {\n      if (!this.searchIsDirty &&\n        !this.internalValue\n      ) return\n\n      if (!this.valueComparator(\n        this.internalSearch,\n        this.getValue(this.internalValue)\n      )) {\n        this.setSearch()\n      }\n    },\n    hasItem (item: any) {\n      return this.selectedValues.indexOf(this.getValue(item)) > -1\n    },\n    onCopy (event: ClipboardEvent) {\n      if (this.selectedIndex === -1) return\n\n      const currentItem = this.selectedItems[this.selectedIndex]\n      const currentItemText = this.getText(currentItem)\n      event.clipboardData!.setData('text/plain', currentItemText)\n      event.clipboardData!.setData('text/vnd.vuetify.autocomplete.item+plain', currentItemText)\n      event.preventDefault()\n    },\n  },\n})\n"],"sourceRoot":""}